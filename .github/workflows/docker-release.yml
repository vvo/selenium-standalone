name: Manual Docker Publish

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release type - major, minor or patch'
        required: true
        default: 'patch'
      distTag:
        description: 'NPM tag (e.g. use "next" to release a test version)'
        required: true
        default: 'latest'

env:
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

jobs:
  authorize:
    runs-on: ubuntu-latest
    steps:
      - uses: octokit/request-action@v2.0.0
        with:
          route: GET /orgs/:organisation/teams/:team/memberships/${{ github.actor }}
          team: technical-steering-committee
          organisation: webdriverio
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  release:
    needs: [authorize]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            vvoyer/selenium-standalone
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          # always push given this workflow is triggered manually
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
